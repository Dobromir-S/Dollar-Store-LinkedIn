{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","components/JobOffers.jsx","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","EMPLOYEE_API_BASE_URL","firstname","lastname","company","title","salary","sphere","desc","id","getEmployees","a","fetch","response","json","result","JobOffers","state","modalIsOpen","modal2IsOpen","applicantsModalIsOpen","applicants","test","openModal","bind","openModal2","closeModal","closeModal2","closeApplicantsModal","handleChange","handleSubmit","handleCreate","deleteOffer","data","console","log","this","setState","method","catch","error","event","target","value","createJob","preventDefault","requestOptions","headers","body","JSON","stringify","description","type","applyToJob","url","firstName","lastName","timer","setInterval","Button","onClick","style","color","background","margin","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","map","scope","length","showApplicants","Modal","open","isOpen","onClose","onSubmit","onChange","handleChange2","handleCompany","handleTitle","handleSalary","handleSphere","handleDesc","phone","Component","ReactDOM","render","StrictMode","modalState","document","getElementById"],"mappings":"mOAAe,I,YCqBAA,ICTAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,iICKRQ,EAAwB,iCAC1BC,EAAY,GACZC,EAAW,GACXC,EAAU,GACVC,EAAQ,GACRC,EAAS,GACTC,EAAS,GACTC,EAAO,GACPC,EAAK,E,SAIMC,I,2EAAf,8BAAAC,EAAA,sEAC2BC,MAAMX,GADjC,cACUY,EADV,gBAEyBA,EAASC,OAFlC,cAEUC,EAFV,yBASWA,GATX,4C,0BAyWeC,E,kDA3VX,aAAe,IAAD,8BACV,gBAgIJC,MAAQ,CACJC,aAAa,EACbC,cAAc,EACdC,uBAAuB,EACvBC,WAAY,GACZP,KAAM,GACNQ,KAAM,IArIN,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAElB,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBAClB,EAAKG,YAAc,EAAKA,YAAYH,KAAjB,gBACnB,EAAKI,qBAAuB,EAAKA,qBAAqBJ,KAA1B,gBAE5B,EAAKK,aAAe,EAAKA,aAAaL,KAAlB,gBACpB,EAAKM,aAAe,EAAKA,aAAaN,KAAlB,gBACpB,EAAKO,aAAe,EAAKA,aAAaP,KAAlB,gBAEpB,EAAKQ,YAAc,EAAKA,YAAYR,KAAjB,gBAbT,E,sDAgBJS,GACNC,QAAQC,IAAIF,GACZxB,EAAKwB,EAAKxB,GACV2B,KAAKC,SAAS,CAACnB,aAAa,M,mCAI5BkB,KAAKC,SAAS,CAAClB,cAAc,M,kCAGrBV,GAISG,MAAM,kCAAoCH,EAHpC,CACnB6B,OAAQ,a,qCAKD7B,GACX,IAGMY,EAAaT,MAAM,kCAAoCH,EAHtC,CACnB6B,OAAQ,QAGK3C,MAAK,SAAAkB,GAAQ,OAAIA,EAASC,UAC1BnB,MAAK,SAACsC,GAAD,OAAUA,EAAKZ,cACpBkB,OAAM,SAACC,GACJN,QAAQC,IAAIK,MAGhCN,QAAQC,IAAId,GAEZe,KAAKC,SAAS,CAACjB,uBAAuB,IACtCgB,KAAKC,SAAS,CAAChB,WAAYA,M,oCAM3Be,KAAKC,SAAS,CAAClB,cAAc,M,mCAI7BiB,KAAKC,SAAS,CAACnB,aAAa,M,6CAI5BkB,KAAKC,SAAS,CAACjB,uBAAuB,M,mCAG7BqB,GACTvC,EAAYuC,EAAMC,OAAOC,MACzBT,QAAQC,IAAIjC,K,oCAGFuC,GACVtC,EAAWsC,EAAMC,OAAOC,MACxBT,QAAQC,IAAIhC,K,oCAGFsC,GACVrC,EAAUqC,EAAMC,OAAOC,Q,kCAGfF,GACRpC,EAAQoC,EAAMC,OAAOC,Q,mCAGZF,GACTnC,EAASmC,EAAMC,OAAOC,Q,mCAGbF,GACTlC,EAASkC,EAAMC,OAAOC,Q,iCAGfF,GACPjC,EAAOiC,EAAMC,OAAOC,Q,mCAGXF,GACTP,QAAQC,IAAI,OACZC,KAAKT,cACLS,KAAKQ,YACLH,EAAMI,mB,kCAKNX,QAAQC,IAAI,QACZ,IAAMW,EAAiB,CACnBR,OAAQ,OACRS,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAE9C,QAASA,EAASC,MAAOA,EAAOC,OAAQA,EAAQ6C,YAAa3C,EAAM4C,KAAM7C,KAEnFK,MAAM,iCAAkCkC,K,mCAGhDL,GACTL,KAAKV,aACLU,KAAKiB,aACLZ,EAAMI,mB,4JAIAS,EAAM,wCAA0C7C,EACtDyB,QAAQC,IAAImB,GACNR,EAAiB,CACnBR,OAAQ,OACRS,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEK,UAAWrD,EAAWsD,SAAUrD,K,SAEpCS,MAAM,wCAA0CH,EAAIqC,G,8QAa3EV,KAAKqB,MAAQC,aAAY,kBAAKhD,IAAef,MAAK,SAAAkB,GAC9C,EAAKwB,SAAS,CAAEvB,KAAMD,SACtB,K,qIAGG,IAAD,OACN,OACI,gCACI,cAAC8C,EAAA,EAAD,CACIC,QAAS,kBAAM,EAAKnC,cACpBoC,MAAO,CACHC,MAAO,QACPC,WAAY,YACZC,OAAQ,IALhB,oBAUA,cAACC,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,sBACA,cAACA,EAAA,EAAD,CAAWC,MAAM,QAAjB,mBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,oBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,oBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,yBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,6BAGJ,cAACC,EAAA,EAAD,UACGrC,KAAKnB,MAAMH,KAAK4D,KAAI,SAACzC,GAAD,OACnB,eAACqC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWL,UAAU,KAAKS,MAAM,MAAhC,SACG1C,EAAK7B,UAER,cAACmE,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BvC,EAAK5B,QAC/B,cAACkE,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BvC,EAAK3B,SAC/B,cAACiE,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BvC,EAAKmB,OAC/B,cAACmB,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BvC,EAAKkB,cAC/B,cAACoB,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BvC,EAAKZ,WAAWuD,SAEtC,cAACjB,EAAA,EAAD,CACEC,QAAS,kBAAM,EAAKrC,UAAUU,IAC9B4B,MAAO,CACIC,MAAO,QACPC,WAAY,QACZC,OAAQ,IALrB,mBAWA,cAACL,EAAA,EAAD,CACEC,QAAS,kBAAM,EAAK5B,YAAYC,EAAKxB,KACrCoD,MAAO,CACIC,MAAO,QACPC,WAAY,MACZC,OAAQ,IALrB,0BAWA,cAACL,EAAA,EAAD,CACIC,QAAS,kBAAM,EAAKiB,eAAe5C,EAAKxB,KACxCoD,MAAO,CACIC,MAAO,QACPC,WAAY,OACZC,OAAQ,IALvB,+BAhCS/B,EAAK5B,iBAiD5B,cAACyE,EAAA,EAAD,CACIC,KAAM3C,KAAKnB,MAAMC,YACjB8D,OAAQ5C,KAAKnB,MAAMC,YACnB+D,QAAS7C,KAAKV,WACdmC,MAAO,CACIC,MAAO,QACPC,WAAY,QACZC,OAAQ,IAPvB,SAUE,gCACI,+CACA,uBAAMkB,SAAU9C,KAAKN,aAArB,UACE,gDAEE,uBAAOsB,KAAK,OAAOT,MAAOP,KAAKnB,MAAM0B,MAAOwC,SAAU/C,KAAKP,kBAE7D,uBACA,+CAEE,uBAAOuB,KAAK,OAAOT,MAAOP,KAAKnB,MAAM0B,MAAOwC,SAAU/C,KAAKP,kBAE7D,uBACA,2CAEE,uBAAOuB,KAAK,OAAO+B,SAAU/C,KAAKgD,mBAEpC,uBACA,uBAAOhC,KAAK,SAAST,MAAM,mBAKnC,cAACmC,EAAA,EAAD,CACIC,KAAM3C,KAAKnB,MAAME,aACjB6D,OAAQ5C,KAAKnB,MAAME,aACnB8D,QAAS7C,KAAKT,YACdkC,MAAO,CACHC,MAAO,QACPC,WAAY,QACZC,OAAQ,IAPhB,SAUI,gCACI,4CACA,uBAAMkB,SAAU9C,KAAKL,aAArB,UACI,6CAEI,uBAAOqB,KAAK,OAAO+B,SAAU/C,KAAKiD,mBAEtC,uBACA,2CAEI,uBAAOjC,KAAK,OAAO+B,SAAU/C,KAAKkD,iBAEtC,uBACA,4CAEI,uBAAOlC,KAAK,OAAO+B,SAAU/C,KAAKmD,kBAEtC,uBACA,4CAEI,uBAAOnC,KAAK,OAAO+B,SAAU/C,KAAKoD,kBAEtC,uBACA,iDAEI,uBAAOpC,KAAK,OAAO+B,SAAU/C,KAAKqD,gBAEtC,uBACA,uBAAOrC,KAAK,SAAST,MAAM,mBAKvC,cAACmC,EAAA,EAAD,CACIC,KAAM3C,KAAKnB,MAAMG,sBACjB4D,OAAQ5C,KAAKnB,MAAMG,sBACnB6D,QAAS7C,KAAKR,qBACdiC,MAAO,CACIC,MAAO,QACPC,WAAY,QACZC,OAAQ,IAPvB,SAUE,gCACI,4CACA,cAACC,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACA,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,MAAM,QAAjB,wBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,uBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,wBAGJ,cAACC,EAAA,EAAD,UACGrC,KAAKnB,MAAMI,WAAWqD,KAAI,SAACzC,GAAD,OACzB,eAACqC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWL,UAAU,KAAKS,MAAM,MAAhC,SACG1C,EAAKsB,YAER,cAACgB,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BvC,EAAKuB,WAC/B,cAACe,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BvC,EAAKyD,UALlBzD,EAAKsB,qBAW1B,cAACI,EAAA,EAAD,CACIC,QAAS,kBAAM,EAAKhC,wBACpBiC,MAAO,CACIC,MAAO,QACPC,WAAY,YACZC,OAAQ,IALvB,yC,GA5UE2B,aC5BxBC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,uDACA,cAAC,EAAD,CAAWC,YAAU,OAEvBC,SAASC,eAAe,SAM1BzG,M","file":"static/js/main.4cb081f5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nconst EMPLOYEE_API_BASE_URL = \"http://localhost:8088/api/jobs\";\r\n\r\nasync function getEmployees(){\r\n  console.log(\"stuff \")\r\n  const response = await fetch(EMPLOYEE_API_BASE_URL);\r\n  const data = await response.json();\r\n  console.log(data)\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <button className=\"btn btn-primary\" onClick={getEmployees}> Add Employee</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { Component } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst EMPLOYEE_API_BASE_URL = \"http://localhost:8088/api/jobs\";\r\nlet firstname = ''\r\nlet lastname = ''\r\nlet company = ''\r\nlet title = ''\r\nlet salary = ''\r\nlet sphere = ''\r\nlet desc = ''\r\nlet id = 1;\r\n\r\nlet applicants = []\r\n\r\nasync function getEmployees(){\r\n    const response = await fetch(EMPLOYEE_API_BASE_URL);\r\n    const result = await response.json();\r\n\r\n//      const result = [{\"id\":3,\"company\":\"SAP\",\"title\":\"janitor\",\"type\":\"IT\",\"description\":\"Be Zobi\",\"salary\":5,\r\n//      \"applicants\":[{\"id\":1,\"fristName\":\"Zobi\",\"last_name\":\"McZobFace\"}]},\r\n//      {\"id\":5,\"company\":\"ChadChad\",\"title\":\"ChadChad\",\"type\":\"IT\",\"description\":\"Be chad\",\"salary\":99999999,\"applicants\":[]},\r\n//      {\"id\":7,\"company\":\"basic\",\"title\":\"basic\",\"type\":\"Useless\",\"description\":\"Be basic\",\"salary\":1,\"applicants\":[]}]\r\n\r\n    return result;\r\n}\r\n\r\nclass JobOffers extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.openModal = this.openModal.bind(this);\r\n        this.openModal2 = this.openModal2.bind(this);\r\n\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.closeModal2 = this.closeModal2.bind(this);\r\n        this.closeApplicantsModal = this.closeApplicantsModal.bind(this);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleCreate = this.handleCreate.bind(this);\r\n\r\n        this.deleteOffer = this.deleteOffer.bind(this);\r\n    }\r\n\r\n    openModal(data) {\r\n        console.log(data)\r\n        id = data.id;\r\n        this.setState({modalIsOpen: true});\r\n    }\r\n\r\n    openModal2() {\r\n        this.setState({modal2IsOpen: true});\r\n    }\r\n\r\n    deleteOffer(id) {\r\n        const requestOptions = {\r\n            method: 'DELETE'\r\n        };\r\n        const response = fetch('http://localhost:8088/api/jobs/' + id, requestOptions);\r\n    }\r\n\r\n    showApplicants(id) {\r\n        const requestOptions = {\r\n            method: 'GET'\r\n        };\r\n        const applicants = fetch('http://localhost:8088/api/jobs/' + id, requestOptions)\r\n                        .then(response => response.json())\r\n                        .then((data) => data.applicants)\r\n                        .catch((error) => {\r\n                            console.log(error);\r\n                        });\r\n\r\n        console.log(applicants);\r\n\r\n        this.setState({applicantsModalIsOpen: true})\r\n        this.setState({applicants: applicants})\r\n    }\r\n\r\n    showApplicants\r\n\r\n    closeModal2() {\r\n        this.setState({modal2IsOpen: false});\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({modalIsOpen: false});\r\n    }\r\n\r\n    closeApplicantsModal() {\r\n        this.setState({applicantsModalIsOpen: false});\r\n    }\r\n\r\n    handleChange(event) {\r\n        firstname = event.target.value;\r\n        console.log(firstname)\r\n    }\r\n\r\n    handleChange2(event) {\r\n        lastname = event.target.value;\r\n        console.log(lastname);\r\n    }\r\n\r\n    handleCompany(event) {\r\n        company = event.target.value;\r\n    }\r\n\r\n    handleTitle(event) {\r\n        title = event.target.value;\r\n    }\r\n\r\n    handleSalary(event) {\r\n        salary = event.target.value;\r\n    }\r\n\r\n    handleSphere(event) {\r\n        sphere = event.target.value;\r\n    }\r\n\r\n    handleDesc(event) {\r\n        desc = event.target.value;\r\n    }\r\n\r\n    handleCreate(event) {\r\n        console.log(\"hey\")\r\n        this.closeModal2();\r\n        this.createJob();\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    createJob(){\r\n        console.log(\"test\")\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ company: company, title: title, salary: salary, description: desc, type: sphere})\r\n        };\r\n        const response = fetch('http://localhost:8088/api/jobs', requestOptions);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.closeModal();\r\n        this.applyToJob();\r\n        event.preventDefault();\r\n    }\r\n\r\n    async applyToJob(){\r\n        const url = 'http://localhost:8088/api/jobs/apply/' + id;\r\n        console.log(url)\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ firstName: firstname, lastName: lastname })\r\n        };\r\n        const response = await fetch('http://localhost:8088/api/jobs/apply/' + id, requestOptions);\r\n    }\r\n\r\n    state = {\r\n        modalIsOpen: false,\r\n        modal2IsOpen: false,\r\n        applicantsModalIsOpen: false,\r\n        applicants: [],\r\n        json: [],\r\n        test: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.timer = setInterval(()=> getEmployees().then(response => {\r\n            this.setState({ json: response });\r\n        }), 1000);\r\n    }\r\n\r\n     render() {\r\n        return (\r\n            <div>\r\n                <Button\r\n                    onClick={() => this.openModal2()}\r\n                    style={{\r\n                        color: \"white\",\r\n                        background: \"lightblue\",\r\n                        margin: 20,\r\n                    }}\r\n                >\r\n                    Create\r\n                </Button>\r\n                <TableContainer component={Paper}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Company</TableCell>\r\n                        <TableCell align=\"right\">Title</TableCell>\r\n                        <TableCell align=\"right\">Salary</TableCell>\r\n                        <TableCell align=\"right\">Sphere</TableCell>\r\n                        <TableCell align=\"right\">Description</TableCell>\r\n                        <TableCell align=\"right\">Applicants</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {this.state.json.map((data) => (\r\n                        <TableRow key={data.title}>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {data.company}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">{data.title}</TableCell>\r\n                          <TableCell align=\"right\">{data.salary}</TableCell>\r\n                          <TableCell align=\"right\">{data.type}</TableCell>\r\n                          <TableCell align=\"right\">{data.description}</TableCell>\r\n                          <TableCell align=\"right\">{data.applicants.length}</TableCell>\r\n\r\n                              <Button\r\n                                onClick={() => this.openModal(data)}\r\n                                style={{\r\n                                           color: \"white\",\r\n                                           background: \"green\",\r\n                                           margin: 20,\r\n                                       }}\r\n                              >\r\n                                Apply\r\n                              </Button>\r\n\r\n                              <Button\r\n                                onClick={() => this.deleteOffer(data.id)}\r\n                                style={{\r\n                                           color: \"white\",\r\n                                           background: \"red\",\r\n                                           margin: 20,\r\n                                       }}\r\n                              >\r\n                                Retire Offer\r\n                              </Button>\r\n\r\n                              <Button\r\n                                  onClick={() => this.showApplicants(data.id)}\r\n                                  style={{\r\n                                             color: \"white\",\r\n                                             background: \"blue\",\r\n                                             margin: 20,\r\n                                         }}\r\n                                >\r\n                                  Show Applicants\r\n                              </Button>\r\n\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n\r\n                <Modal\r\n                    open={this.state.modalIsOpen}\r\n                    isOpen={this.state.modalIsOpen}\r\n                    onClose={this.closeModal}\r\n                    style={{\r\n                               color: \"white\",\r\n                               background: \"white\",\r\n                               margin: 20\r\n                           }}\r\n                    >\r\n                  <div>\r\n                      <h3>Apply for Job</h3>\r\n                      <form onSubmit={this.handleSubmit}>\r\n                        <label>\r\n                          First Name:\r\n                          <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n                        </label>\r\n                        <br/>\r\n                        <label>\r\n                          Last Name:\r\n                          <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n                        </label>\r\n                        <br/>\r\n                        <label>\r\n                          Phone:\r\n                          <input type=\"text\" onChange={this.handleChange2} />\r\n                        </label>\r\n                        <br/>\r\n                        <input type=\"submit\" value=\"Submit\" />\r\n                      </form>\r\n                  </div>\r\n                </Modal>\r\n\r\n                <Modal\r\n                    open={this.state.modal2IsOpen}\r\n                    isOpen={this.state.modal2IsOpen}\r\n                    onClose={this.closeModal2}\r\n                    style={{\r\n                        color: \"white\",\r\n                        background: \"white\",\r\n                        margin: 20\r\n                    }}\r\n                >\r\n                    <div>\r\n                        <h3>Create Job</h3>\r\n                        <form onSubmit={this.handleCreate}>\r\n                            <label>\r\n                                company:\r\n                                <input type=\"text\" onChange={this.handleCompany} />\r\n                            </label>\r\n                            <br/>\r\n                            <label>\r\n                                title:\r\n                                <input type=\"text\" onChange={this.handleTitle} />\r\n                            </label>\r\n                            <br/>\r\n                            <label>\r\n                                salary:\r\n                                <input type=\"text\" onChange={this.handleSalary} />\r\n                            </label>\r\n                            <br/>\r\n                            <label>\r\n                                sphere:\r\n                                <input type=\"text\" onChange={this.handleSphere} />\r\n                            </label>\r\n                            <br/>\r\n                            <label>\r\n                                description:\r\n                                <input type=\"text\" onChange={this.handleDesc} />\r\n                            </label>\r\n                            <br/>\r\n                            <input type=\"submit\" value=\"Create\" />\r\n                        </form>\r\n                    </div>\r\n                </Modal>\r\n\r\n                <Modal\r\n                    open={this.state.applicantsModalIsOpen}\r\n                    isOpen={this.state.applicantsModalIsOpen}\r\n                    onClose={this.closeApplicantsModal}\r\n                    style={{\r\n                               color: \"white\",\r\n                               background: \"white\",\r\n                               margin: 20\r\n                           }}\r\n                    >\r\n                  <div>\r\n                      <h3>Applicants</h3>\r\n                      <TableContainer component={Paper}>\r\n                      <Table>\r\n                        <TableHead>\r\n                          <TableRow>\r\n                            <TableCell align=\"right\">First Name</TableCell>\r\n                            <TableCell align=\"right\">Last Name</TableCell>\r\n                            <TableCell align=\"right\">Phone</TableCell>\r\n                          </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                          {this.state.applicants.map((data) => (\r\n                            <TableRow key={data.firstName}>\r\n                              <TableCell component=\"th\" scope=\"row\">\r\n                                {data.firstName}\r\n                              </TableCell>\r\n                              <TableCell align=\"right\">{data.lastName}</TableCell>\r\n                              <TableCell align=\"right\">{data.phone}</TableCell>\r\n                            </TableRow>\r\n                          ))}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                      <Button\r\n                          onClick={() => this.closeApplicantsModal()}\r\n                          style={{\r\n                                     color: \"white\",\r\n                                     background: \"lightblue\",\r\n                                     margin: 20,\r\n                                 }}\r\n                        >\r\n                          Show Applicants\r\n                      </Button>\r\n                  </div>\r\n                </Modal>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default JobOffers","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport JobOffers from \"./components/JobOffers\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <h1>Dollar Store LinkedIn</h1>\r\n    <JobOffers modalState />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}