{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","components/JobOffers.jsx","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","EMPLOYEE_API_BASE_URL","firstname","lastname","company","title","salary","sphere","desc","getEmployees","a","fetch","response","json","data","JobOffers","state","modalIsOpen","modal2IsOpen","test","openModal","bind","openModal2","closeModal","closeModal2","handleChange","handleSubmit","handleCreate","console","log","this","setState","event","target","value","createJob","preventDefault","requestOptions","method","headers","body","JSON","stringify","description","type","applyToJob","firstName","lastName","timer","setInterval","Button","onClick","style","color","background","margin","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","map","scope","applicants","length","Modal","open","isOpen","onClose","onSubmit","onChange","handleChange2","handleCompany","handleTitle","handleSalary","handleSphere","handleDesc","Component","ReactDOM","render","StrictMode","modalState","document","getElementById"],"mappings":"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","file":"static/js/main.e44de0c8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport axios from \"axios\";\nimport React from \"react\";\nconst EMPLOYEE_API_BASE_URL = \"http://localhost:8088/api/jobs\";\n\nasync function getEmployees(){\n  console.log(\"stuff \")\n  const response = await fetch(EMPLOYEE_API_BASE_URL);\n  const data = await response.json();\n  console.log(data)\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <button className=\"btn btn-primary\" onClick={getEmployees}> Add Employee</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\ninterface jobOffer {\r\n    id: number,\r\n    company: string,\r\n    title: string,\r\n    type: string,\r\n    description: string,\r\n    salary: string,\r\n    applicants: [],\r\n}\r\n\r\ninterface Applicant {\r\n    id: number,\r\n    fristName: string,\r\n    last_name: string,\r\n}\r\n\r\nconst EMPLOYEE_API_BASE_URL = \"http://localhost:8088/api/jobs\";\r\nlet firstname = ''\r\nlet lastname = ''\r\nlet company = ''\r\nlet title = ''\r\nlet salary = ''\r\nlet sphere = ''\r\nlet desc = ''\r\n\r\nasync function getEmployees(){\r\n    const response = await fetch(EMPLOYEE_API_BASE_URL);\r\n    const data = await response.json();\r\n\r\n     // const result = [{\"id\":3,\"company\":\"SAP\",\"title\":\"janitor\",\"type\":\"IT\",\"description\":\"Be Zobi\",\"salary\":5,\r\n     // \"applicants\":[{\"id\":1,\"fristName\":\"Zobi\",\"last_name\":\"McZobFace\"}]},\r\n     // {\"id\":5,\"company\":\"ChadChad\",\"title\":\"ChadChad\",\"type\":\"IT\",\"description\":\"Be chad\",\"salary\":99999999,\"applicants\":[]},\r\n     // {\"id\":7,\"company\":\"basic\",\"title\":\"basic\",\"type\":\"Useless\",\"description\":\"Be basic\",\"salary\":1,\"applicants\":[]}]\r\n\r\n    return data;\r\n}\r\n\r\nclass JobOffers extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.openModal = this.openModal.bind(this);\r\n        this.openModal2 = this.openModal2.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.closeModal2 = this.closeModal2.bind(this);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleCreate = this.handleCreate.bind(this);\r\n\r\n    }\r\n\r\n    openModal(data) {\r\n        console.log(data)\r\n        this.setState({modalIsOpen: true});\r\n    }\r\n\r\n    openModal2() {\r\n        this.setState({modal2IsOpen: true});\r\n    }\r\n\r\n    closeModal2() {\r\n        this.setState({modal2IsOpen: false});\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({modalIsOpen: false});\r\n    }\r\n\r\n    handleChange(event) {\r\n        firstname = event.target.value;\r\n        console.log(firstname)\r\n    }\r\n\r\n    handleChange2(event) {\r\n        lastname = event.target.value;\r\n        console.log(lastname);\r\n    }\r\n\r\n    handleCompany(event) {\r\n        company = event.target.value;\r\n    }\r\n\r\n    handleTitle(event) {\r\n        title = event.target.value;\r\n    }\r\n\r\n    handleSalary(event) {\r\n        salary = event.target.value;\r\n    }\r\n\r\n    handleSphere(event) {\r\n        sphere = event.target.value;\r\n    }\r\n\r\n    handleDesc(event) {\r\n        desc = event.target.value;\r\n    }\r\n\r\n    handleCreate(event) {\r\n        console.log(\"hey\")\r\n        this.closeModal2();\r\n        this.createJob();\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    createJob(){\r\n        console.log(\"test\")\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ company: company, title: title, salary: salary, description: desc, type: sphere})\r\n        };\r\n        const response = fetch('http://localhost:8088/api/jobs', requestOptions);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.closeModal();\r\n        this.applyToJob();\r\n        event.preventDefault();\r\n    }\r\n\r\n    async applyToJob(){\r\n        console.log(\"test\")\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ firstName: firstname, lastName: lastname })\r\n        };\r\n        const response = await fetch('http://localhost:8088/api/jobs', requestOptions);\r\n    }\r\n\r\n\r\n\r\n    state = {\r\n        modalIsOpen: false,\r\n        modal2IsOpen: false,\r\n        json: [],\r\n        test: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.timer = setInterval(()=> getEmployees().then(response => {\r\n            this.setState({ json: response });\r\n        }), 1000);\r\n    }\r\n\r\n     render() {\r\n        return (\r\n            <div>\r\n                <Button\r\n                    onClick={() => this.openModal2()}\r\n                    style={{\r\n                        color: \"white\",\r\n                        background: \"lightblue\",\r\n                        margin: 20,\r\n                    }}\r\n                >\r\n                    Create\r\n                </Button>\r\n                <TableContainer component={Paper}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Company</TableCell>\r\n                        <TableCell align=\"right\">Title</TableCell>\r\n                        <TableCell align=\"right\">Salary</TableCell>\r\n                        <TableCell align=\"right\">Sphere</TableCell>\r\n                        <TableCell align=\"right\">Description</TableCell>\r\n                        <TableCell align=\"right\">Applicants</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {this.state.json.map((data) => (\r\n                        <TableRow key={data.title}>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {data.company}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">{data.title}</TableCell>\r\n                          <TableCell align=\"right\">{data.salary}</TableCell>\r\n                          <TableCell align=\"right\">{data.type}</TableCell>\r\n                          <TableCell align=\"right\">{data.description}</TableCell>\r\n                          <TableCell align=\"right\">{data.applicants.length}</TableCell>\r\n\r\n                              <Button\r\n                                onClick={() => this.openModal(data)}\r\n                                style={{\r\n                                           color: \"white\",\r\n                                           background: \"lightblue\",\r\n                                           margin: 20,\r\n                                       }}\r\n                              >\r\n                                Apply\r\n                            </Button>\r\n\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n\r\n                <Modal\r\n                    open={this.state.modalIsOpen}\r\n                    isOpen={this.state.modalIsOpen}\r\n                    onClose={this.closeModal}\r\n                    style={{\r\n                               color: \"white\",\r\n                               background: \"white\",\r\n                               margin: 20\r\n                           }}\r\n                    >\r\n                  <div>\r\n                      <h3>Apply for Job</h3>\r\n                      <form onSubmit={this.handleSubmit}>\r\n                        <label>\r\n                          First Name:\r\n                          <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n                        </label>\r\n                        <br/>\r\n                        <label>\r\n                          Last Name:\r\n                          <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n                        </label>\r\n                        <br/>\r\n                        <label>\r\n                          Phone:\r\n                          <input type=\"text\" onChange={this.handleChange2} />\r\n                        </label>\r\n                        <br/>\r\n                        <input type=\"submit\" value=\"Submit\" />\r\n                      </form>\r\n                  </div>\r\n                </Modal>\r\n\r\n                <Modal\r\n                    open={this.state.modal2IsOpen}\r\n                    isOpen={this.state.modal2IsOpen}\r\n                    onClose={this.closeModal2}\r\n                    style={{\r\n                        color: \"white\",\r\n                        background: \"white\",\r\n                        margin: 20\r\n                    }}\r\n                >\r\n                    <div>\r\n                        <h3>Create Job</h3>\r\n                        <form onSubmit={this.handleCreate}>\r\n                            <label>\r\n                                company:\r\n                                <input type=\"text\" onChange={this.handleCompany} />\r\n                            </label>\r\n                            <br/>\r\n                            <label>\r\n                                title:\r\n                                <input type=\"text\" onChange={this.handleTitle} />\r\n                            </label>\r\n                            <br/>\r\n                            <label>\r\n                                salary:\r\n                                <input type=\"text\" onChange={this.handleSalary} />\r\n                            </label>\r\n                            <br/>\r\n                            <label>\r\n                                sphere:\r\n                                <input type=\"text\" onChange={this.handleSphere} />\r\n                            </label>\r\n                            <br/>\r\n                            <label>\r\n                                description:\r\n                                <input type=\"text\" onChange={this.handleDesc} />\r\n                            </label>\r\n                            <br/>\r\n                            <input type=\"submit\" value=\"Create\" />\r\n                        </form>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default JobOffers","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport JobOffers from \"./components/JobOffers\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <h1>Dollar Store LinkedIn</h1>\r\n    <JobOffers modalState />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}